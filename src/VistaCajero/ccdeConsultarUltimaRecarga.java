/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistaCajero;

import Conexion.ConexionSQL;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jamt_
 */
public class ccdeConsultarUltimaRecarga extends javax.swing.JInternalFrame {

    /**
     * Creates new form ccdeConsultarUltimaRecarga
     */
    DefaultTableModel model;
    
    public ccdeConsultarUltimaRecarga() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        tablaUltimaRecarga.setBackground(Color.WHITE);
        cargar2();
        cargarSaldoDisponible();
    }
    
    void cargar2(){
        String mostrar="SELECT * FROM VoucherTarjeta WHERE idVoucherTarjeta = (SELECT MAX(idVoucherTarjeta) FROM VoucherTarjeta WHERE idCliente="+bbPrincipal.idCliente+")";
        String []titulos={"NRO OPERACION","IMPORTE CARGADO","SALDO INICIAL","SALDO FINAL","FECHA DE OPERACION"};
        String []Registros=new String[5];
        model= new DefaultTableModel(null, titulos);
        double saldoDisponible = 0;
        try {
              Statement st = cn.createStatement();
              ResultSet rs = st.executeQuery(mostrar);
              
              while(rs.next())
              {
                  Registros[0]= rs.getString("nroOperacion");
                  Registros[1]= rs.getString("importeCargado");
                  Registros[2]= rs.getString("saldoInicial");
                  Registros[3]= rs.getString("saldoFinal");
                  Registros[4]= rs.getString("fechaOperacion");      
                  model.addRow(Registros);
              }
              tablaUltimaRecarga.setModel(model);
              
        } catch (SQLException ex) {
            System.out.println("Error en la tabla ultimo saldo: " + ex);
        }
    }
    
    void cargarSaldoDisponible(){
        
        String mostrar="SELECT * FROM Tarjeta WHERE idTarjeta="+aaLogearTarjeta.idTarjeta;
        
        double saldoDisponible = 0;
        try {
              Statement st = cn.createStatement();
              ResultSet rs = st.executeQuery(mostrar);
              
              if(rs.next()){
                  saldoDisponible = rs.getDouble("saldoTarjeta");
              }
              
              txtSaldoDisponible.setEditable(false);
              txtSaldoDisponible.setText("S/. " + saldoDisponible);
              
        } catch (SQLException ex) {
            System.out.println("Error en cargar saldo disponible: " + ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUltimaRecarga = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSaldoDisponible = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Consultar Ultima Recarga");
        setToolTipText("");

        tablaUltimaRecarga.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        tablaUltimaRecarga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaUltimaRecarga);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setText("Saldo Disponible:");

        txtSaldoDisponible.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtSaldoDisponible.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSaldoDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSaldoDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUltimaRecarga;
    private javax.swing.JTextField txtSaldoDisponible;
    // End of variables declaration//GEN-END:variables
Conexion.ConexionSQL cc = new ConexionSQL();
Connection cn= ConexionSQL.conexionn();
}
